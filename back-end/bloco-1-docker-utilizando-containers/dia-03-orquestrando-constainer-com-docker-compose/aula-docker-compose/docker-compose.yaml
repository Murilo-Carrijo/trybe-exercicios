version: '3'

services:
  frontend:
    build: frontend/ # Especificamos o contexto, ou seja, a pasta onde está o Dockerfile.
    restart: on-failure # define que o container será reiniciado caso ocorra alguma falha apontada pelo exit code, diferente de zero;
    ports:
      - 3000:3000 # o parâmetro é sempre a porta do computador local e o segundo parâmetro é a porta exposta no container.
    depends_on:
      - backend
    volumes:
      - ./logs:/var/log/frontend # nome do disco virtual : caminho no container
    networks:
      - rede-virtual-1
  backend:
    build: backend/ # Especificamos o contexto, ou seja, a pasta onde está o Dockerfile.
    restart: on-failure # define que o container será reiniciado caso ocorra alguma falha apontada pelo exit code, diferente de zero;
    ports:
      - 3001:3001 # o parâmetro é sempre a porta do computador local e o segundo parâmetro é a porta exposta no container.
    environment:
      - DB_HOST=database
    depends_on:
      - database
    networks:
      - rede-virtual-1
      - rede-virtual-2
  database:
    image: betrybe/docker-compose-example-database:v1 ## Especificamos a Imagem Docker diretamente.
    restart: on-failure # define que o container será reiniciado caso ocorra alguma falha apontada pelo exit code, diferente de zero;
    volumes:
      - dados-do-banco:/data/db # nome do disco virtual : caminho no container
    networks:
      - rede-virtual-2

volumes:
  dados-do-banco:

networks:
  rede-virtual-1:
  rede-virtual-2: